2025-10-07 00:16:16 [main] INFO  org.example.eshop.EshopApplication - Starting EshopApplication using Java 21.0.3 with PID 67510 (/Users/anton/IdeaProjects/eshop-java/build/classes/java/main started by anton in /Users/anton/IdeaProjects/eshop-java)
2025-10-07 00:16:16 [main] INFO  org.example.eshop.EshopApplication - The following 1 profile is active: "dev"
2025-10-07 00:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 00:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 110 ms. Found 7 JPA repository interfaces.
2025-10-07 00:16:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-07 00:16:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-07 00:16:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-10-07 00:16:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-07 00:16:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1446 ms
2025-10-07 00:16:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-07 00:16:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@65a48cab
2025-10-07 00:16:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-07 00:16:18 [main] INFO  org.flywaydb.core.FlywayExecutor - Database: jdbc:postgresql://localhost:5432/mydatabase (PostgreSQL 17.0)
2025-10-07 00:16:18 [main] INFO  o.f.core.internal.command.DbMigrate - Current version of schema "public": 1
2025-10-07 00:16:18 [main] WARN  o.f.core.internal.command.DbMigrate - outOfOrder mode is active. Migration of schema "public" may not be reproducible.
2025-10-07 00:16:18 [main] INFO  o.f.core.internal.command.DbMigrate - Schema "public" is up to date. No migration necessary.
2025-10-07 00:16:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 00:16:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-10-07 00:16:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 00:16:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 00:16:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 00:16:18 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-10-07 00:16:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 00:16:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 00:16:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-07 00:16:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-07 00:16:21 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-10-07 00:16:21 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure Or [Mvc [pattern='/admin/**'], Mvc [pattern='/api/admin/**']] with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-07 00:16:21 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CsrfFilter, LogoutFilter, UsernamePasswordAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-10-07 00:16:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-07 00:16:21 [main] INFO  org.example.eshop.EshopApplication - Started EshopApplication in 5.654 seconds (process running for 6.354)
2025-10-07 00:16:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-07 00:16:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-07 00:16:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-07 00:16:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-10-07 00:16:30 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-10-07 00:16:30 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /catalog
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /catalog
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.slug,
        p1_0.status,
        p1_0.title,
        p1_0.type,
        p1_0.updated_at 
    from
        products p1_0 
    left join
        variants v1_0 
            on p1_0.id=v1_0.product_id 
    where
        p1_0.status=?
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:31 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/style.css
2025-10-07 00:16:31 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/style.css
2025-10-07 00:16:31 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /products/earl-grey-black-tea
2025-10-07 00:16:34 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /products/earl-grey-black-tea
2025-10-07 00:16:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.slug,
        p1_0.status,
        p1_0.title,
        p1_0.type,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.slug=?
2025-10-07 00:16:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:34 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/style.css
2025-10-07 00:16:34 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/style.css
2025-10-07 00:16:34 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/cart
2025-10-07 00:16:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/cart
2025-10-07 00:16:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        i1_0.cart_id,
        i1_0.id,
        i1_0.created_at,
        i1_0.price_snapshot,
        i1_0.qty,
        i1_0.updated_at,
        i1_0.variant_id,
        c1_0.shipping_cost,
        c1_0.subtotal,
        c1_0.total,
        c1_0.updated_at,
        c1_0.vat_amount 
    from
        carts c1_0 
    left join
        cart_items i1_0 
            on c1_0.id=i1_0.cart_id 
    where
        c1_0.id=?
2025-10-07 00:16:38 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/cart/1/items
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/cart/1/items
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        i1_0.cart_id,
        i1_0.id,
        i1_0.created_at,
        i1_0.price_snapshot,
        i1_0.qty,
        i1_0.updated_at,
        i1_0.variant_id,
        c1_0.shipping_cost,
        c1_0.subtotal,
        c1_0.total,
        c1_0.updated_at,
        c1_0.vat_amount 
    from
        carts c1_0 
    left join
        cart_items i1_0 
            on c1_0.id=i1_0.cart_id 
    where
        c1_0.id=?
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.id=?
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.cart_id,
        ci1_0.created_at,
        ci1_0.price_snapshot,
        ci1_0.qty,
        ci1_0.updated_at,
        ci1_0.variant_id 
    from
        cart_items ci1_0 
    where
        ci1_0.cart_id=? 
        and ci1_0.variant_id=?
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        cart_items
        (cart_id, created_at, price_snapshot, qty, updated_at, variant_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.cart_id,
        ci1_0.created_at,
        ci1_0.price_snapshot,
        ci1_0.qty,
        ci1_0.updated_at,
        ci1_0.variant_id 
    from
        cart_items ci1_0 
    where
        ci1_0.cart_id=?
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        carts 
    set
        created_at=?,
        shipping_cost=?,
        subtotal=?,
        total=?,
        updated_at=?,
        vat_amount=? 
    where
        id=?
2025-10-07 00:16:38 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /catalog
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /catalog
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.slug,
        p1_0.status,
        p1_0.title,
        p1_0.type,
        p1_0.updated_at 
    from
        products p1_0 
    left join
        variants v1_0 
            on p1_0.id=v1_0.product_id 
    where
        p1_0.status=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.created_at,
        l1_0.harvest_year,
        l1_0.press_date,
        l1_0.product_id,
        l1_0.season,
        l1_0.storage_type,
        l1_0.updated_at 
    from
        lots l1_0 
    where
        l1_0.id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.product_id=?
2025-10-07 00:16:39 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/style.css
2025-10-07 00:16:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/style.css
2025-10-07 00:16:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cart
2025-10-07 00:16:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cart
2025-10-07 00:16:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        i1_0.cart_id,
        i1_0.id,
        i1_0.created_at,
        i1_0.price_snapshot,
        i1_0.qty,
        i1_0.updated_at,
        i1_0.variant_id,
        c1_0.shipping_cost,
        c1_0.subtotal,
        c1_0.total,
        c1_0.updated_at,
        c1_0.vat_amount 
    from
        carts c1_0 
    left join
        cart_items i1_0 
            on c1_0.id=i1_0.cart_id 
    where
        c1_0.id=?
2025-10-07 00:16:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.id=?
2025-10-07 00:16:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.slug,
        p1_0.status,
        p1_0.title,
        p1_0.type,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-10-07 00:16:41 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/style.css
2025-10-07 00:16:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/style.css
2025-10-07 00:16:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /checkout
2025-10-07 00:16:43 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /checkout
2025-10-07 00:16:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        i1_0.cart_id,
        i1_0.id,
        i1_0.created_at,
        i1_0.price_snapshot,
        i1_0.qty,
        i1_0.updated_at,
        i1_0.variant_id,
        c1_0.shipping_cost,
        c1_0.subtotal,
        c1_0.total,
        c1_0.updated_at,
        c1_0.vat_amount 
    from
        carts c1_0 
    left join
        cart_items i1_0 
            on c1_0.id=i1_0.cart_id 
    where
        c1_0.id=?
2025-10-07 00:16:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.lot_id,
        v1_0.price,
        v1_0.product_id,
        v1_0.reserved_qty,
        v1_0.shipping_weight,
        v1_0.sku,
        v1_0.stock_qty,
        v1_0.title,
        v1_0.updated_at,
        v1_0.version,
        v1_0.weight 
    from
        variants v1_0 
    where
        v1_0.id=?
2025-10-07 00:16:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.slug,
        p1_0.status,
        p1_0.title,
        p1_0.type,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-10-07 00:16:43 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/style.css
2025-10-07 00:16:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/style.css
2025-10-07 00:16:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-07 00:16:50 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-10-07 00:16:50 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-10-07 00:16:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 00:16:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 00:16:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
